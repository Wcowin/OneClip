name: Deploy OneClip Documentation

on:
  push:
    branches:
      - main
    paths:
      - 'docs/**'
      - 'mkdocs.yml'
      - '.github/workflows/ci.yml'
      - 'requirements.txt'
  pull_request:
    branches:
      - main
    paths:
      - 'docs/**'
      - 'mkdocs.yml'

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          key: mkdocs-${{ runner.os }}-${{ hashFiles('requirements.txt', 'mkdocs.yml') }}
          path: |
            ~/.cache/pip
            .cache
          restore-keys: |
            mkdocs-${{ runner.os }}-
            
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Validate MkDocs config
        run: mkdocs config
          
      - name: Build documentation
        run: mkdocs build --verbose --clean --strict
          
      - name: Setup Pages
        uses: actions/configure-pages@v3
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: 'site'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
        
      - name: Deployment summary
        run: |
          echo "📋 OneClip文档部署完成！"
          echo "🌍 文档地址: ${{ steps.deployment.outputs.page_url }}"
          echo "🔄 appcast.xml路径: ${{ steps.deployment.outputs.page_url }}updates/"
          echo ""
          echo "💡 下一步操作："
          echo "1. 验证文档网站是否正常访问"
          echo "2. 将生成的appcast.xml文件上传到updates/目录"
          echo "3. 更新OneClip应用中的Feed URL"
